{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 ******Installation Steps**********\
/* @author: Dhirendra Singh\
*/\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 If you'd like to deploy Sparrow on your own cluster, you'll need to\
do a few things:\
1) Download Sparrow:\
	$ git clone git://github.com/radlab/sparrow.git\
2) Install maven: sudo apt-get install maven\
3) Build Sparrow:\
	$ cd sparrow\
	$ mvn package\
4) Write a configuration file and copy the file to all machines. Currently,\
each Sparrow scheduler needs a configuration file that gives a list of where\
all of the Sparrow node monitors (worker machines) are running. For example:example_sparrow_configuration.conf\
5) Write all Private Ip address of all nodes into \'93example_sparrow_configuration.conf\'94 under \'93static.node_monitors=(private IP address) (port number:)20502\'94\
6) Start Sparrow on all machines (both schedulers and node monitors). Starting\
Sparrow runs both a scheduler and a node monitor on the machine. Using\
the concurrent mark and sweep garbage collector is highly recommended -- the GC\
pauses using other gargabge collectors become significant when running\
sub-second tasks).\
7) Open three different terminals and run the below command each on terminals.\
\
java -XX:+UseConcMarkSweepGC -cp /home/ubuntu/sparrow-master/target/sparrow-1.0-SNAPSHOT.jar edu.berkeley.sparrow.daemon.SparrowDaemon -c example_sparrow_configuration.conf\
\
java -cp /home/ubuntu/sparrow-master/target/sparrow-1.0-SNAPSHOT.jar edu.berkeley.sparrow.examples.ProtoBackend\
\
java -cp /home/ubuntu/sparrow-master/target/sparrow-1.0-SNAPSHOT.jar edu.berkeley.sparrow.examples.ProtoFrontend\
\
8) The frontend accepts a configuration file (by adding "-c conf_file" when\
starting the frontend) where you can specify various configuration options to\
submit different types of jobs (e.g., with different numbers of tasks,\
of different duration, etc.), described in prototype/ProtoFrontend.java.\
\
9) In this case no additional configuration file is needed.\
\
\
\
\
}